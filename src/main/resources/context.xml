<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

<!--    this takes care of intializing all the required bean post processors needed-->
    <bean id="demo" class="com.roombookingsystem.live.DemoClass">
        <property name="name" value="KUNAL"/>
    </bean>
    <bean id="rect" class="com.roombookingsystem.live.Rectangle">
        <constructor-arg index="0" name="height" value="50px"/>
        <constructor-arg index="1" name="width" value="40px"/>
    </bean>
    <bean id="start" class="com.roombookingsystem.live.Start">
        <property name="demoClass" ref="demo"/>
    </bean>
    <bean id="point1" class="com.roombookingsystem.live.Point">
        <property name="x" value="2"/>
        <property name="y" value="4"/>
    </bean>
    <bean id="point2" class="com.roombookingsystem.live.Point">
        <property name="x" value="5"/>
        <property name="y" value="6"/>
    </bean>
    <bean id="point3" class="com.roombookingsystem.live.Point">
        <property name="x" value="1"/>
        <property name="y" value="4"/>
    </bean>
    <bean id="pointd" class="com.roombookingsystem.live.Point">
        <property name="x" value="${pointd.pointx}"/>
        <property name="y" value="${pointd.pointy}"/>
    </bean>

    <bean id="pointa" class="com.roombookingsystem.live.Point">
    <property name="x" value="${pointa.x}"/>
    <property name="y" value="${pointa.y}"/>
</bean>
    <bean id="pointEgForQualifier" class="com.roombookingsystem.live.Point">
        <qualifier value="useDefault"/>
        <property name="x" value="${pointa.x}"/>
        <property name="y" value="${pointa.y}"/>
    </bean>

    <alias name="point1" alias="point1-alias"/>

    <bean id="triangle" class="com.roombookingsystem.live.Triangle">
    <property name="pointList">
        <list>
            <ref bean="point1"/>
            <ref bean="point2"/>
            <ref bean="point3"/>
            <ref bean="pointd"/>
            <ref bean="pointa"/>
            <bean class="com.roombookingsystem.live.Point">
                <property name="x" value="11"/>
                <property name="y" value="41"/>
            </bean>
            <ref bean="point1-alias"/>
        </list>
    </property>
    </bean>
    <bean id="triangle-autowire" class="com.roombookingsystem.live.TriangleAutowire" autowire="byName">
   <property name="pointList" ref="pointList"/>
    </bean>
    <bean id="triangle-autowire-qualifier" class="com.roombookingsystem.live.TriangleAutowireWithQualifier">
    </bean>
    <util:list id="pointList" >
        <ref bean="point1"/>
        <ref bean="point2"/>
        <ref bean="point3"/>
    </util:list>
    <util:list id="fruits-list" list-class="java.util.LinkedList">
        <value> apple</value>
        <value> orange</value>
        <value> mango</value>

    </util:list>
<bean id="triangleInitAndDestory" class="com.roombookingsystem.live.TriangleInitAndDestroy">
<property name="point1" ref="point1-alias"/>
</bean>
    <bean id="triangleInitAndDestoryMyMethod" class="com.roombookingsystem.live.TriangleInitAndDestroyMyMethod" init-method="myinit" destroy-method="myDestroy">
        <property name="point1" ref="point1-alias"/>
    </bean>
<!--    to include values from pointconfig files to pointd ban we need to do this , this is a beanfactorypostprocessor called-->
<!--    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
<!--    <property name="locations" value="classpath:pointConfig.properties"/>-->
<!--    </bean>-->
<!--   this is the better alternative to add properties file of our project before intialization of beans
as the above is depreceated-->
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:pointConfig.properties</value>
                <value>classpath:application.properties</value>
            </list>
        </property>
    </bean>
    <context:annotation-config />

<!--    For validation @required annotation , without this @reqired aanotation wont work-->
<!--<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/>-->
<!--    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>-->
<!--    <bean id="displayBeanName" class="com.roombookingsystem.live.DisplayBeanName"></bean>-->
<!--    <bean class="com.roombookingsystem.live.BeanFactoryPostProcessImpl"/>-->
    <context:component-scan base-package="com.roombookingsystem.live" />
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>mymessages</value>
                <value>pointConfig</value>
            </list>
        </property>
    </bean>
</beans>

